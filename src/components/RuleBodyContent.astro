---
interface Props {
  content: string;
  styles?: string;
}

const { content, styles } = Astro.props;

const h3ExtractionPattern = new RegExp("(^.*?)<h3>(.*?)</h3>(.*)");
const hasNotePattern = new RegExp("<note>");

const [, h3Preceding, h3, h3After] = content.match(h3ExtractionPattern) ?? [];

const hasNote = Boolean(content.match(hasNotePattern));

const contentWithNoteMarkup = content
  .replace(
    /<note>/g,
    '<span tabindex="0" class="inline-block note-wrapper relative text-3xl text-amber-600 ml-1"> <i class="note"><span class="max-w-[900px] py-4 mx-auto" style="display:inherit;">'
  )
  .replace(/<\/note>/g, "</span></i>*</span>");
---

<Fragment>
  {
    hasNote ? (
      <p
        class:list={["text-2xl leading-9 py-2", styles]}
        set:html={contentWithNoteMarkup}
      />
    ) : h3 ? (
      <Fragment>
        {h3Preceding ? (
          <p class:list={["text-2xl leading-9 py-2", styles]}>{h3Preceding}</p>
        ) : null}
        <h3 class:list={["text-3xl leading-9 py-2", styles]}>{h3}</h3>
        {h3After ? (
          <p class:list={["text-2xl leading-9 py-2", styles]}>{h3After}</p>
        ) : null}
      </Fragment>
    ) : content ? (
      <p class:list={["text-2xl leading-9 py-2", styles]}>{content}</p>
    ) : null
  }
</Fragment>

<style is:global>
  .note {
    display: none;
  }

  .note-wrapper:hover {
    cursor: pointer;
  }

  .note-wrapper:focus .note,
  .note-wrapper:hover .note {
    display: inline-block;
    position: fixed;
    z-index: 1;
    width: 100%;
    margin-inline: auto;
    bottom: 0;
    left: 0;
    right: 0;
    background: #fff;
    color: #23262d;
    padding: 0.5rem 0.75rem;
    border-radius: 0.25rem;
    box-shadow:
      7.1px 6.7px 5.3px rgba(0, 0, 0, 0.016),
      23.9px 22.3px 17.9px rgba(0, 0, 0, 0.024),
      107px 100px 80px rgba(0, 0, 0, 0.04);
    font-weight: bold;
    font-size: 1rem;
  }
</style>
